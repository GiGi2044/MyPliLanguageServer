plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'antlr'
}

description = 'langserver-core'

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    antlr 'org.antlr:antlr4:4.9.3'
}

generateGrammarSource {
    inputs.files fileTree('src/main/antlr').include('**/*.g4')
    maxHeapSize = "64m"
    arguments += ['-package', 'com.pli.compiler.parser']
    outputDirectory = file("$buildDir/generated-src/antlr/main/com/pli/compiler/parser")
}

compileJava.dependsOn generateGrammarSource
sourceSets.main.java.srcDir file("$buildDir/generated-src/antlr/main")

// Ensure compileKotlin depends on generateGrammarSource
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    dependsOn generateGrammarSource
}

// Define generateTestGrammarSource task
generateTestGrammarSource {
    inputs.files fileTree('src/test/antlr').include('**/*.g4')
    maxHeapSize = "64m"
    arguments += ['-package', 'com.pli.compiler.parser']
    outputDirectory = file("$buildDir/generated-src/antlr/test/com/pli/compiler/parser")
}

compileTestKotlin.dependsOn generateTestGrammarSource
sourceSets.test.java.srcDir file("$buildDir/generated-src/antlr/test")

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    if (name.contains("Test")) {
        dependsOn generateTestGrammarSource
    }
}
